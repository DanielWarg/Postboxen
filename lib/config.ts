import { z } from "zod"

const EnvSchema = z.object({
  NODE_ENV: z.enum(["development", "test", "production"]).default("development"),
  AI_ASSISTANT_API_URL: z.string().url().optional(),
  AI_ASSISTANT_API_KEY: z.string().optional(),
  AI_ASSISTANT_WEBHOOK_SECRET: z.string().optional(),
  MS_TEAMS_CLIENT_ID: z.string().optional(),
  MS_TEAMS_CLIENT_SECRET: z.string().optional(),
  MS_TEAMS_TENANT_ID: z.string().optional(),
  ZOOM_CLIENT_ID: z.string().optional(),
  ZOOM_CLIENT_SECRET: z.string().optional(),
  ZOOM_ACCOUNT_ID: z.string().optional(),
  ZOOM_WEBHOOK_SECRET_TOKEN: z.string().optional(),
  GOOGLE_MEET_CLIENT_ID: z.string().optional(),
  GOOGLE_MEET_CLIENT_SECRET: z.string().optional(),
  GOOGLE_MEET_REFRESH_TOKEN: z.string().optional(),
  GOOGLE_MEET_CALENDAR_ID: z.string().optional(),
  WEBEX_CLIENT_ID: z.string().optional(),
  WEBEX_CLIENT_SECRET: z.string().optional(),
  WEBEX_REFRESH_TOKEN: z.string().optional(),
  WEBEX_ACCESS_TOKEN: z.string().optional(),
  WEBEX_WEBHOOK_SECRET: z.string().optional(),
  DEFAULT_TIMEZONE: z.string().default("Europe/Stockholm"),
  DEFAULT_LOCALE: z.string().default("sv-SE"),
  MS_PLANNER_PLAN_ID: z.string().optional(),
  MS_PLANNER_TOKEN: z.string().optional(),
  MS_GRAPH_SENDMAIL_TOKEN: z.string().optional(),
  JIRA_BASE_URL: z.string().optional(),
  JIRA_API_TOKEN: z.string().optional(),
  JIRA_PROJECT_KEY: z.string().optional(),
  TRELLO_KEY: z.string().optional(),
  TRELLO_TOKEN: z.string().optional(),
  TRELLO_LIST_ID: z.string().optional(),
  NEXT_PUBLIC_APP_URL: z.string().url().optional(),
  NEXT_PUBLIC_ANALYTICS_ID: z.string().optional(),
  OBSERVABILITY_ENDPOINT: z.string().optional(),
  JWT_SECRET: z.string(),
  JWT_ISSUER: z.string().default("postboxen"),
  JWT_AUDIENCE: z.string().default("postboxen-clients"),
  ALLOWED_ORIGINS: z.string().default("*"),
  RATE_LIMIT_WINDOW_MS: z.coerce.number().default(60_000),
  RATE_LIMIT_MAX: z.coerce.number().default(120),
  MEMORY_DEFAULT_TTL_MS: z.coerce.number().default(86_400_000),
  DATABASE_URL: z.string(),
  REDIS_URL: z.string().optional(),
})

const parsed = EnvSchema.safeParse({
  NODE_ENV: process.env.NODE_ENV,
  AI_ASSISTANT_API_URL: process.env.AI_ASSISTANT_API_URL,
  AI_ASSISTANT_API_KEY: process.env.AI_ASSISTANT_API_KEY,
  AI_ASSISTANT_WEBHOOK_SECRET: process.env.AI_ASSISTANT_WEBHOOK_SECRET,
  MS_TEAMS_CLIENT_ID: process.env.MS_TEAMS_CLIENT_ID,
  MS_TEAMS_CLIENT_SECRET: process.env.MS_TEAMS_CLIENT_SECRET,
  MS_TEAMS_TENANT_ID: process.env.MS_TEAMS_TENANT_ID,
  ZOOM_CLIENT_ID: process.env.ZOOM_CLIENT_ID,
  ZOOM_CLIENT_SECRET: process.env.ZOOM_CLIENT_SECRET,
  ZOOM_ACCOUNT_ID: process.env.ZOOM_ACCOUNT_ID,
  ZOOM_WEBHOOK_SECRET_TOKEN: process.env.ZOOM_WEBHOOK_SECRET_TOKEN,
  GOOGLE_MEET_CLIENT_ID: process.env.GOOGLE_MEET_CLIENT_ID,
  GOOGLE_MEET_CLIENT_SECRET: process.env.GOOGLE_MEET_CLIENT_SECRET,
  GOOGLE_MEET_REFRESH_TOKEN: process.env.GOOGLE_MEET_REFRESH_TOKEN,
  GOOGLE_MEET_CALENDAR_ID: process.env.GOOGLE_MEET_CALENDAR_ID,
  WEBEX_CLIENT_ID: process.env.WEBEX_CLIENT_ID,
  WEBEX_CLIENT_SECRET: process.env.WEBEX_CLIENT_SECRET,
  WEBEX_REFRESH_TOKEN: process.env.WEBEX_REFRESH_TOKEN,
  WEBEX_ACCESS_TOKEN: process.env.WEBEX_ACCESS_TOKEN,
  WEBEX_WEBHOOK_SECRET: process.env.WEBEX_WEBHOOK_SECRET,
  DEFAULT_TIMEZONE: process.env.DEFAULT_TIMEZONE,
  DEFAULT_LOCALE: process.env.DEFAULT_LOCALE,
  MS_PLANNER_PLAN_ID: process.env.MS_PLANNER_PLAN_ID,
  MS_PLANNER_TOKEN: process.env.MS_PLANNER_TOKEN,
  MS_GRAPH_SENDMAIL_TOKEN: process.env.MS_GRAPH_SENDMAIL_TOKEN,
  JIRA_BASE_URL: process.env.JIRA_BASE_URL,
  JIRA_API_TOKEN: process.env.JIRA_API_TOKEN,
  JIRA_PROJECT_KEY: process.env.JIRA_PROJECT_KEY,
  TRELLO_KEY: process.env.TRELLO_KEY,
  TRELLO_TOKEN: process.env.TRELLO_TOKEN,
  TRELLO_LIST_ID: process.env.TRELLO_LIST_ID,
  NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,
  NEXT_PUBLIC_ANALYTICS_ID: process.env.NEXT_PUBLIC_ANALYTICS_ID,
  OBSERVABILITY_ENDPOINT: process.env.OBSERVABILITY_ENDPOINT,
  JWT_SECRET: process.env.JWT_SECRET,
  JWT_ISSUER: process.env.JWT_ISSUER,
  JWT_AUDIENCE: process.env.JWT_AUDIENCE,
  ALLOWED_ORIGINS: process.env.ALLOWED_ORIGINS,
  RATE_LIMIT_WINDOW_MS: process.env.RATE_LIMIT_WINDOW_MS,
  RATE_LIMIT_MAX: process.env.RATE_LIMIT_MAX,
  MEMORY_DEFAULT_TTL_MS: process.env.MEMORY_DEFAULT_TTL_MS,
  DATABASE_URL: process.env.DATABASE_URL,
  REDIS_URL: process.env.REDIS_URL,
})

if (!parsed.success) {
  console.error("Fel i miljökonfiguration:", parsed.error.format())
  throw new Error("Ogiltiga miljövariabler – se logg")
}

export const env = {
  ...parsed.data,
  ALLOWED_ORIGINS_LIST: parsed.data.ALLOWED_ORIGINS.split(",").map((origin) => origin.trim()),
}
