# Kubernetes deployment configuration for Postboxen Agent Platform

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postboxen-app
  labels:
    app: postboxen
    component: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postboxen
      component: app
  template:
    metadata:
      labels:
        app: postboxen
        component: app
    spec:
      containers:
      - name: postboxen
        image: postboxen:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postboxen-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: postboxen-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: postboxen-secrets
              key: jwt-secret
        - name: JWT_ISSUER
          value: "postboxen"
        - name: JWT_AUDIENCE
          value: "postboxen-users"
        - name: AI_ASSISTANT_API_URL
          valueFrom:
            secretKeyRef:
              name: postboxen-secrets
              key: ai-assistant-api-url
        - name: AI_ASSISTANT_API_KEY
          valueFrom:
            secretKeyRef:
              name: postboxen-secrets
              key: ai-assistant-api-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: postboxen-service
  labels:
    app: postboxen
spec:
  selector:
    app: postboxen
    component: app
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: postboxen-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - app.postboxen.se
    secretName: postboxen-tls
  rules:
  - host: app.postboxen.se
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: postboxen-service
            port:
              number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: postboxen-secrets
type: Opaque
data:
  database-url: <base64-encoded-database-url>
  redis-url: <base64-encoded-redis-url>
  jwt-secret: <base64-encoded-jwt-secret>
  ai-assistant-api-url: <base64-encoded-ai-api-url>
  ai-assistant-api-key: <base64-encoded-ai-api-key>

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: postboxen-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: postboxen-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
